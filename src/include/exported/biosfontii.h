//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
// StyleAsCode exporter v2.0 - Style data exported as a values array            //
//                                                                              //
// USAGE: On init call: GuiLoadStyleBIOSfontII();                                   //
//                                                                              //
// more info and bugs-report:  github.com/raysan5/raygui                        //
// feedback and support:       ray[at]raylibtech.com                            //
//                                                                              //
// Copyright (c) 2020-2025 raylib technologies (@raylibtech)                    //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

#define BIOSFONTII_STYLE_PROPS_COUNT  3

// Custom style name: BIOSfontII
static const GuiStyleProp biosfontiiStyleProps[BIOSFONTII_STYLE_PROPS_COUNT] = {
    { 0, 16, (int)0x00000010 },    // DEFAULT_TEXT_SIZE 
    { 0, 17, (int)0x00000000 },    // DEFAULT_TEXT_SPACING 
    { 0, 20, (int)0x00000018 },    // DEFAULT_TEXT_LINE_SPACING 
};

// WARNING: This style uses a custom font: "BIOSfontII.ttf" (size: 16, spacing: 0)

#define BIOSFONTII_STYLE_FONT_ATLAS_COMP_SIZE 1345

// Font atlas image pixels data: DEFLATE compressed
static unsigned char biosfontiiFontData[BIOSFONTII_STYLE_FONT_ATLAS_COMP_SIZE] = { 0xed,
    0xdd, 0xd9, 0x6e, 0xdb, 0x3a, 0x14, 0x05, 0x50, 0xfe, 0xff, 0x4f, 0xf3, 0xe2, 0xa2, 0x40, 0x1b, 0x14, 0x8d, 0x49, 0x9e,
    0x41, 0x92, 0xe3, 0x95, 0xf5, 0x96, 0xc1, 0x51, 0xb4, 0x35, 0x30, 0xd6, 0xa6, 0x34, 0x07, 0x00, 0xc0, 0x3f, 0xfc, 0xff,
    0xf1, 0xfd, 0x67, 0x23, 0x5f, 0x1d, 0x2f, 0xbf, 0xf6, 0xf5, 0xf3, 0xdf, 0x7f, 0xc7, 0x4c, 0xbc, 0xea, 0xea, 0x7b, 0x77,
    0x96, 0xff, 0xec, 0x2b, 0x5f, 0x3f, 0xf6, 0x5f, 0x29, 0xba, 0x0e, 0xd6, 0xaf, 0x79, 0x96, 0xfe, 0xab, 0xa5, 0xee, 0xcc,
    0xff, 0xd5, 0x6b, 0x9f, 0xe4, 0x7c, 0xfa, 0xdd, 0xaf, 0xfe, 0xee, 0x58, 0xfe, 0xe7, 0xfb, 0xd7, 0x08, 0xaf, 0x83, 0xd5,
    0x92, 0xf7, 0xe7, 0xff, 0xf7, 0xc7, 0x78, 0xf1, 0x1d, 0x23, 0xb8, 0x7d, 0xd4, 0xec, 0xe7, 0xb1, 0xe5, 0x5f, 0xff, 0x6d,
    0xd7, 0x1c, 0x7b, 0x23, 0xdb, 0x75, 0x55, 0xfe, 0xe3, 0x77, 0xfe, 0x23, 0x7c, 0x76, 0x88, 0xee, 0x45, 0xb3, 0x68, 0xef,
    0x5f, 0xad, 0xc1, 0xec, 0xd9, 0xab, 0x27, 0xfd, 0xa7, 0xe4, 0xbf, 0xb3, 0xe4, 0xeb, 0x3c, 0x66, 0x38, 0xfd, 0xfd, 0xa5,
    0x3a, 0xcf, 0x31, 0x73, 0xfe, 0xef, 0x4e, 0xff, 0xcf, 0x11, 0xf0, 0xde, 0xad, 0xb0, 0x26, 0xff, 0xd3, 0x9f, 0xfe, 0x93,
    0xfd, 0x2c, 0xf9, 0x0b, 0xfa, 0x73, 0xac, 0x5f, 0xeb, 0x4f, 0xcf, 0x3f, 0x77, 0xfe, 0x7f, 0x7d, 0x74, 0xdb, 0x19, 0x59,
    0xbe, 0x7f, 0xfe, 0xbb, 0x23, 0xa3, 0x2b, 0xf2, 0xcf, 0x2c, 0xff, 0xee, 0x9e, 0x5e, 0xff, 0xca, 0xef, 0x9e, 0xff, 0x78,
    0x4c, 0xfe, 0xf5, 0xc7, 0xff, 0xab, 0xf3, 0x7f, 0xee, 0x7e, 0x92, 0xcb, 0xe4, 0x9a, 0xd1, 0x49, 0xfd, 0x3a, 0x9a, 0xe9,
    0x6d, 0x6b, 0x96, 0x6c, 0x01, 0xef, 0x9a, 0xfe, 0xfa, 0x7f, 0xa0, 0xda, 0xf7, 0x00, 0xfa, 0xce, 0x6e, 0xef, 0x9c, 0x00,
    0xf9, 0xff, 0x2a, 0xa5, 0xef, 0xba, 0x02, 0xf2, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x9e, 0x2b, 0x32, 0xf1, 0xbe, 0x6e,
    0xb6, 0x09, 0x14, 0x6f, 0x11, 0x9f, 0x77, 0x74, 0x33, 0x3d, 0xe1, 0xf3, 0x06, 0x4f, 0x7c, 0x6d, 0xd7, 0x5f, 0xfb, 0xdd,
    0xeb, 0x5c, 0x8d, 0xc0, 0x32, 0x65, 0x9a, 0x4c, 0x57, 0x7c, 0xb5, 0xa7, 0xd3, 0xbf, 0xfb, 0x6a, 0x91, 0xb5, 0xbd, 0xd7,
    0x7f, 0x8f, 0xb6, 0x23, 0xe2, 0x9d, 0xfc, 0x5c, 0xfe, 0x99, 0xf6, 0x46, 0x74, 0x9b, 0xed, 0xbe, 0x52, 0x15, 0xeb, 0x6f,
    0x57, 0x6c, 0x1d, 0xf5, 0xcb, 0x9c, 0x99, 0x8d, 0x92, 0x5d, 0xb3, 0x99, 0x9e, 0x68, 0x3e, 0xff, 0xf5, 0x1c, 0xa1, 0xf8,
    0x71, 0x63, 0xd5, 0x70, 0xbe, 0x3a, 0xff, 0xc8, 0x7c, 0xa8, 0x75, 0xd7, 0x7b, 0xef, 0x0c, 0x9f, 0x59, 0xff, 0x7d, 0x1d,
    0xa3, 0xbe, 0xad, 0x67, 0xbd, 0x37, 0x45, 0xf3, 0x9f, 0xe5, 0xe9, 0x8f, 0x82, 0x46, 0x76, 0x6c, 0x2f, 0x8d, 0x9e, 0x45,
    0x23, 0xa3, 0xb3, 0xfa, 0xf9, 0x5c, 0xf1, 0x19, 0x44, 0x3b, 0x73, 0xcf, 0x6a, 0xf7, 0xff, 0x9d, 0x9f, 0x88, 0x2c, 0xd1,
    0x5d, 0xf9, 0x8f, 0xb2, 0xf1, 0xdf, 0x95, 0xe7, 0xd2, 0xd5, 0x0c, 0x97, 0xae, 0xe3, 0x7f, 0xe6, 0x4c, 0x3c, 0x1e, 0xb9,
    0xff, 0x57, 0x8c, 0x31, 0x7b, 0xc6, 0xff, 0x9d, 0x73, 0x3f, 0x3a, 0xc6, 0xff, 0x7b, 0x6b, 0xba, 0x67, 0x94, 0xd6, 0xf5,
    0x5f, 0x54, 0x77, 0x9a, 0xb1, 0x73, 0x69, 0x7e, 0x5c, 0x13, 0xcf, 0x3f, 0x37, 0x5f, 0xbb, 0xe3, 0x5d, 0x9a, 0xbd, 0x99,
    0xa0, 0x99, 0xf7, 0xac, 0xde, 0xaf, 0xff, 0xb8, 0xde, 0xea, 0x35, 0xab, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xfc,
    0x15, 0xdc, 0x58, 0x3b, 0x28, 0x73, 0x27, 0xd0, 0xf3, 0xbe, 0xe2, 0xdc, 0xba, 0x73, 0x79, 0x57, 0x6f, 0x3b, 0xda, 0x83,
    0xcc, 0x76, 0x28, 0xf7, 0xaf, 0x2b, 0xd7, 0x77, 0xce, 0xe3, 0x5f, 0xdd, 0xed, 0x3a, 0xc4, 0xda, 0xd7, 0x99, 0x39, 0x20,
    0xb1, 0x2d, 0x6b, 0x34, 0xaf, 0x87, 0xf8, 0x16, 0xb0, 0xba, 0x23, 0x77, 0xe6, 0x7e, 0xce, 0x5f, 0x97, 0xfe, 0xec, 0xf7,
    0x3e, 0x31, 0xff, 0xef, 0xbb, 0x79, 0x3f, 0x25, 0xff, 0xcc, 0x1e, 0xfe, 0xaa, 0xcf, 0xd8, 0xd7, 0x75, 0x8b, 0xf6, 0x2b,
    0x47, 0x43, 0xfe, 0xf3, 0x43, 0xf3, 0x9f, 0xa1, 0x27, 0x29, 0xec, 0xce, 0x92, 0xab, 0xce, 0x3f, 0xdb, 0x37, 0x7b, 0x5e,
    0xfe, 0xb3, 0xad, 0xa7, 0xde, 0xbf, 0xff, 0x67, 0xe7, 0xba, 0x5c, 0x99, 0xff, 0x58, 0x24, 0xdc, 0x31, 0x6f, 0x63, 0xf7,
    0x67, 0xc7, 0xcd, 0xf9, 0x67, 0x7a, 0xd5, 0x75, 0xf9, 0xaf, 0x8e, 0x86, 0xb9, 0xe3, 0x7f, 0x67, 0xfe, 0xb9, 0xf3, 0x60,
    0xd5, 0xfe, 0x3f, 0x3f, 0x22, 0xff, 0x9d, 0xbe, 0x7a, 0x24, 0xff, 0x71, 0x5b, 0xfe, 0x35, 0x5b, 0x40, 0xdf, 0xff, 0x7f,
    0xe7, 0xbf, 0xf7, 0xce, 0xfc, 0xe3, 0x33, 0x73, 0xbb, 0xf2, 0x9f, 0xad, 0xf9, 0x77, 0xbf, 0xff, 0x33, 0x36, 0x46, 0xd5,
    0x55, 0xef, 0xff, 0xac, 0x97, 0x36, 0x36, 0x97, 0xad, 0xff, 0xfd, 0x9f, 0x11, 0x9c, 0x11, 0x32, 0x0b, 0x67, 0xba, 0xf0,
    0xe4, 0x77, 0x68, 0xad, 0x85, 0x4f, 0x7f, 0x87, 0xde, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0xae, 0xfe, 0xc6,
    0xef, 0xa4, 0x7a, 0xcf, 0x57, 0x63, 0x57, 0x71, 0xff, 0xfd, 0xf9, 0xd8, 0xd5, 0xf1, 0x57, 0x3f, 0x3b, 0xb7, 0xaf, 0x28,
    0x47, 0xae, 0x60, 0x9f, 0x27, 0x19, 0xed, 0xe1, 0x8c, 0xc4, 0x35, 0xfa, 0x7b, 0xf2, 0xdf, 0x79, 0xdd, 0xd3, 0xab, 0xab,
    0xd1, 0x44, 0xa2, 0x57, 0x74, 0xe3, 0x1d, 0xb5, 0xd3, 0xab, 0xc5, 0xb9, 0xbf, 0xfd, 0x79, 0xf9, 0x8f, 0x60, 0xfe, 0x33,
    0xb0, 0x0e, 0x72, 0xed, 0xbb, 0x68, 0xe3, 0xa6, 0xb6, 0x23, 0x70, 0x67, 0xfe, 0x33, 0xf5, 0x5c, 0x81, 0xcc, 0x1d, 0x69,
    0x23, 0x47, 0xd6, 0x9a, 0xfd, 0x2d, 0xd3, 0xc5, 0x1b, 0x89, 0x4e, 0x7c, 0xbc, 0x5b, 0x70, 0x47, 0xfe, 0x63, 0x63, 0x1f,
    0x38, 0x6f, 0x72, 0xef, 0xcc, 0xf0, 0xb8, 0xb7, 0x7f, 0x93, 0x69, 0x30, 0x66, 0x3b, 0xa0, 0xf3, 0x4d, 0xf2, 0x8f, 0xf7,
    0xf8, 0xf7, 0xda, 0x88, 0xf7, 0xe7, 0x3f, 0x93, 0xf9, 0xd7, 0x9e, 0x09, 0xba, 0xf2, 0x5f, 0x1f, 0xcb, 0xaa, 0x33, 0x9e,
    0x5b, 0x23, 0xfd, 0x7b, 0xfb, 0x77, 0x33, 0x71, 0xee, 0xcb, 0xcd, 0x06, 0xaa, 0xcd, 0x7f, 0x7d, 0x0e, 0x9f, 0xe1, 0x19,
    0x13, 0x7b, 0x9f, 0x9f, 0x2d, 0x63, 0x9d, 0x67, 0xf4, 0x40, 0xeb, 0x47, 0x1c, 0xf5, 0xf9, 0x8f, 0x8d, 0xff, 0x64, 0xfb,
    0xf2, 0x8f, 0x9e, 0x21, 0x3f, 0x2d, 0xff, 0xec, 0x1c, 0xce, 0xd5, 0xb8, 0xa9, 0xf3, 0x7e, 0x0a, 0xf5, 0x33, 0x12, 0x46,
    0xcb, 0x1c, 0xbb, 0xfa, 0xa4, 0x74, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x58, 0xf3, 0x65, 0x06, 0x9b, 0x73,
    0xab, 0xbb, 0xe2, 0xce, 0xd2, 0x7e, 0x74, 0xac, 0xc1, 0x37, 0xb7, 0x5a, 0xa8, 0xd1, 0x36, 0x66, 0x7c, 0xdd, 0x8c, 0xa6,
    0x27, 0xe7, 0x47, 0x1b, 0xb3, 0xe7, 0xeb, 0xef, 0xf5, 0x5d, 0x11, 0x47, 0x79, 0xfe, 0xd1, 0x46, 0xf0, 0x4e, 0xa7, 0xb6,
    0xeb, 0xbe, 0xce, 0x3d, 0x3d, 0xbf, 0xeb, 0xf3, 0x8f, 0xf7, 0xc3, 0x3a, 0xda, 0x31, 0xe7, 0x0d, 0xfe, 0xf1, 0xd0, 0xfc,
    0x6b, 0x1b, 0xfb, 0xb9, 0xf9, 0x5f, 0x1d, 0xf9, 0xaf, 0xef, 0x6c, 0x79, 0x72, 0xc6, 0x39, 0x6f, 0x47, 0xbf, 0x63, 0xfe,
    0xb5, 0xcf, 0x84, 0xc9, 0xde, 0xc1, 0x77, 0xef, 0xd8, 0x79, 0xcd, 0x9d, 0xa5, 0x77, 0x9a, 0xb3, 0x3f, 0x21, 0xff, 0xca,
    0xb6, 0xea, 0xfe, 0x3d, 0xb1, 0x73, 0x4f, 0xcd, 0xb8, 0x2a, 0xff, 0xb3, 0xe5, 0xbc, 0xeb, 0xd9, 0x1c, 0x35, 0xc7, 0xff,
    0xfe, 0xfc, 0x6b, 0xc6, 0x9a, 0x3f, 0x33, 0xff, 0x91, 0x78, 0x72, 0x57, 0xdf, 0x3d, 0xa1, 0xab, 0xf3, 0x8f, 0x8f, 0xb9,
    0xf2, 0xeb, 0xb6, 0xff, 0xf8, 0x7f, 0x45, 0x57, 0xbb, 0x6e, 0xa4, 0x56, 0xf9, 0x9b, 0xfb, 0xf3, 0xdf, 0x9d, 0xcb, 0x5a,
    0x9d, 0x7f, 0xfd, 0xec, 0xb8, 0xf7, 0xcc, 0xff, 0x64, 0x04, 0x18, 0x6d, 0x95, 0xc7, 0xdb, 0xe8, 0x99, 0xa7, 0x31, 0x8e,
    0xf0, 0xf3, 0x1d, 0xaf, 0xef, 0xea, 0xdf, 0x33, 0xb3, 0xe0, 0xa7, 0xce, 0x11, 0xf0, 0xbc, 0x03, 0xef, 0x53, 0xcb, 0xdf,
    0x95, 0x0a, 0xe9, 0x03, 0x00, 0x00, 0x00, 0x00, 0x40, 0x57, 0xff, 0x6b, 0xff, 0x6e, 0x7b, 0xf5, 0x77, 0x08, 0x1d, 0x1b,
    0x77, 0x0f, 0x3c, 0xed, 0x93, 0x7e, 0xe2, 0x75, 0x85, 0xbe, 0xfc, 0x6b, 0x5e, 0xbb, 0xee, 0x2e, 0xcf, 0xeb, 0x19, 0x0c,
    0x9f, 0x78, 0x55, 0x29, 0x9f, 0xd1, 0x4c, 0x3c, 0xcd, 0x62, 0x04, 0x33, 0xae, 0xcc, 0xdf, 0xf1, 0xbf, 0x2f, 0xff, 0x4c,
    0x3f, 0xb0, 0xfa, 0x19, 0x19, 0xf2, 0x8f, 0xf6, 0x7f, 0xa3, 0xed, 0xf9, 0xb1, 0xdd, 0xff, 0x9b, 0xc1, 0x66, 0xb9, 0x56,
    0x54, 0x7f, 0xa3, 0x66, 0xa7, 0xc3, 0x1c, 0x7b, 0x52, 0xc7, 0xdc, 0x98, 0x3d, 0x58, 0x7d, 0x9e, 0xe7, 0x7c, 0xf4, 0x3b,
    0x43, 0x4d, 0xd3, 0xd5, 0xf8, 0x7f, 0x67, 0xc4, 0x1e, 0x99, 0x79, 0x26, 0xff, 0xf7, 0x3a, 0xf2, 0x5c, 0xff, 0xbc, 0x0a,
    0x9e, 0xd5, 0xe5, 0xbb, 0xfa, 0x79, 0x15, 0xfc, 0xf4, 0xbb, 0x56, 0x18, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xce, 0xaf, 0x0f, 0xeb, 0x41, 0xfe, 0x7c,
    0x6c, 0xfe, 0xff, 0x01 };

// Font glyphs rectangles data (on atlas)
static const Rectangle biosfontiiFontRecs[95] = {
    { 4, 4, 5 , 16 },
    { 17, 4, 4 , 10 },
    { 29, 4, 6 , 4 },
    { 43, 4, 8 , 9 },
    { 59, 4, 7 , 14 },
    { 74, 4, 7 , 7 },
    { 89, 4, 7 , 10 },
    { 104, 4, 3 , 4 },
    { 115, 4, 4 , 10 },
    { 127, 4, 4 , 10 },
    { 139, 4, 8 , 5 },
    { 155, 4, 6 , 5 },
    { 169, 4, 3 , 4 },
    { 180, 4, 6 , 1 },
    { 194, 4, 2 , 2 },
    { 204, 4, 7 , 8 },
    { 219, 4, 7 , 10 },
    { 234, 4, 6 , 10 },
    { 4, 28, 7 , 10 },
    { 19, 28, 7 , 10 },
    { 34, 28, 7 , 10 },
    { 49, 28, 7 , 10 },
    { 64, 28, 7 , 10 },
    { 79, 28, 7 , 10 },
    { 94, 28, 7 , 10 },
    { 109, 28, 7 , 10 },
    { 124, 28, 2 , 7 },
    { 134, 28, 3 , 8 },
    { 145, 28, 6 , 9 },
    { 159, 28, 6 , 4 },
    { 173, 28, 6 , 9 },
    { 187, 28, 7 , 10 },
    { 202, 28, 7 , 9 },
    { 217, 28, 7 , 10 },
    { 232, 28, 7 , 10 },
    { 4, 52, 7 , 10 },
    { 19, 52, 7 , 10 },
    { 34, 52, 7 , 10 },
    { 49, 52, 7 , 10 },
    { 64, 52, 7 , 10 },
    { 79, 52, 7 , 10 },
    { 94, 52, 4 , 10 },
    { 106, 52, 7 , 10 },
    { 121, 52, 7 , 10 },
    { 136, 52, 7 , 10 },
    { 151, 52, 7 , 10 },
    { 166, 52, 7 , 10 },
    { 181, 52, 7 , 10 },
    { 196, 52, 7 , 10 },
    { 211, 52, 7 , 12 },
    { 226, 52, 7 , 10 },
    { 4, 76, 7 , 10 },
    { 19, 76, 6 , 10 },
    { 33, 76, 7 , 10 },
    { 48, 76, 7 , 10 },
    { 63, 76, 7 , 10 },
    { 78, 76, 7 , 10 },
    { 93, 76, 6 , 10 },
    { 107, 76, 7 , 10 },
    { 122, 76, 4 , 10 },
    { 134, 76, 7 , 9 },
    { 149, 76, 4 , 10 },
    { 161, 76, 7 , 4 },
    { 176, 76, 8 , 1 },
    { 192, 76, 3 , 3 },
    { 203, 76, 7 , 7 },
    { 218, 76, 7 , 10 },
    { 233, 76, 7 , 7 },
    { 4, 100, 7 , 10 },
    { 19, 100, 7 , 7 },
    { 34, 100, 7 , 10 },
    { 49, 100, 7 , 9 },
    { 64, 100, 7 , 10 },
    { 79, 100, 4 , 10 },
    { 91, 100, 6 , 13 },
    { 105, 100, 7 , 10 },
    { 120, 100, 3 , 10 },
    { 131, 100, 7 , 7 },
    { 146, 100, 7 , 7 },
    { 161, 100, 7 , 7 },
    { 176, 100, 7 , 10 },
    { 191, 100, 7 , 10 },
    { 206, 100, 7 , 7 },
    { 221, 100, 7 , 7 },
    { 236, 100, 7 , 10 },
    { 4, 124, 7 , 7 },
    { 19, 124, 7 , 7 },
    { 34, 124, 7 , 7 },
    { 49, 124, 8 , 7 },
    { 65, 124, 7 , 9 },
    { 80, 124, 7 , 7 },
    { 95, 124, 6 , 10 },
    { 109, 124, 2 , 9 },
    { 119, 124, 6 , 10 },
    { 133, 124, 7 , 2 },
};

// Font glyphs info data
// NOTE: No glyphs.image data provided
static const GlyphInfo biosfontiiFontGlyphs[95] = {
    { 32, 0, 0, 5, { 0 }},
    { 33, 2, 2, 7, { 0 }},
    { 34, 2, 1, 9, { 0 }},
    { 35, 1, 3, 10, { 0 }},
    { 36, 1, 0, 9, { 0 }},
    { 37, 1, 5, 9, { 0 }},
    { 38, 1, 2, 9, { 0 }},
    { 39, 3, 1, 7, { 0 }},
    { 40, 2, 2, 7, { 0 }},
    { 41, 2, 2, 7, { 0 }},
    { 42, 0, 4, 9, { 0 }},
    { 43, 1, 4, 8, { 0 }},
    { 44, 2, 9, 6, { 0 }},
    { 45, 1, 6, 8, { 0 }},
    { 46, 3, 10, 6, { 0 }},
    { 47, 1, 4, 9, { 0 }},
    { 48, 1, 2, 9, { 0 }},
    { 49, 1, 2, 8, { 0 }},
    { 50, 1, 2, 9, { 0 }},
    { 51, 1, 2, 9, { 0 }},
    { 52, 1, 2, 9, { 0 }},
    { 53, 1, 2, 9, { 0 }},
    { 54, 1, 2, 9, { 0 }},
    { 55, 1, 2, 9, { 0 }},
    { 56, 1, 2, 9, { 0 }},
    { 57, 1, 2, 9, { 0 }},
    { 58, 3, 5, 6, { 0 }},
    { 59, 2, 5, 6, { 0 }},
    { 60, 1, 3, 8, { 0 }},
    { 61, 1, 6, 8, { 0 }},
    { 62, 1, 3, 8, { 0 }},
    { 63, 1, 2, 9, { 0 }},
    { 64, 1, 3, 9, { 0 }},
    { 65, 1, 2, 9, { 0 }},
    { 66, 1, 2, 9, { 0 }},
    { 67, 1, 2, 9, { 0 }},
    { 68, 1, 2, 9, { 0 }},
    { 69, 1, 2, 9, { 0 }},
    { 70, 1, 2, 9, { 0 }},
    { 71, 1, 2, 9, { 0 }},
    { 72, 1, 2, 9, { 0 }},
    { 73, 2, 2, 7, { 0 }},
    { 74, 1, 2, 9, { 0 }},
    { 75, 1, 2, 9, { 0 }},
    { 76, 1, 2, 9, { 0 }},
    { 77, 1, 2, 9, { 0 }},
    { 78, 1, 2, 9, { 0 }},
    { 79, 1, 2, 9, { 0 }},
    { 80, 1, 2, 9, { 0 }},
    { 81, 1, 2, 9, { 0 }},
    { 82, 1, 2, 9, { 0 }},
    { 83, 1, 2, 9, { 0 }},
    { 84, 2, 2, 9, { 0 }},
    { 85, 1, 2, 9, { 0 }},
    { 86, 1, 2, 9, { 0 }},
    { 87, 1, 2, 9, { 0 }},
    { 88, 1, 2, 9, { 0 }},
    { 89, 2, 2, 9, { 0 }},
    { 90, 1, 2, 9, { 0 }},
    { 91, 3, 2, 8, { 0 }},
    { 92, 1, 3, 9, { 0 }},
    { 93, 3, 2, 8, { 0 }},
    { 94, 1, 1, 9, { 0 }},
    { 95, 1, 13, 10, { 0 }},
    { 96, 2, 1, 6, { 0 }},
    { 97, 1, 5, 9, { 0 }},
    { 98, 1, 2, 9, { 0 }},
    { 99, 1, 5, 9, { 0 }},
    { 100, 1, 2, 9, { 0 }},
    { 101, 1, 5, 9, { 0 }},
    { 102, 1, 2, 9, { 0 }},
    { 103, 1, 5, 9, { 0 }},
    { 104, 1, 2, 9, { 0 }},
    { 105, 2, 2, 7, { 0 }},
    { 106, 1, 2, 8, { 0 }},
    { 107, 1, 2, 9, { 0 }},
    { 108, 3, 2, 7, { 0 }},
    { 109, 1, 5, 9, { 0 }},
    { 110, 1, 5, 9, { 0 }},
    { 111, 1, 5, 9, { 0 }},
    { 112, 1, 5, 9, { 0 }},
    { 113, 1, 5, 9, { 0 }},
    { 114, 1, 5, 9, { 0 }},
    { 115, 1, 5, 9, { 0 }},
    { 116, 1, 2, 9, { 0 }},
    { 117, 1, 5, 9, { 0 }},
    { 118, 1, 5, 9, { 0 }},
    { 119, 1, 5, 9, { 0 }},
    { 120, 1, 5, 10, { 0 }},
    { 121, 1, 5, 9, { 0 }},
    { 122, 1, 5, 9, { 0 }},
    { 123, 1, 2, 8, { 0 }},
    { 124, 3, 3, 6, { 0 }},
    { 125, 1, 2, 8, { 0 }},
    { 126, 1, 2, 9, { 0 }},
};

// Style loading function: BIOSfontII
static void GuiLoadStyleBIOSfontII(void)
{
    // Load style properties provided
    // NOTE: Default properties are propagated
    for (int i = 0; i < BIOSFONTII_STYLE_PROPS_COUNT; i++)
    {
        GuiSetStyle(biosfontiiStyleProps[i].controlId, biosfontiiStyleProps[i].propertyId, biosfontiiStyleProps[i].propertyValue);
    }

    // Custom font loading
    // NOTE: Compressed font image data (DEFLATE), it requires DecompressData() function
    int biosfontiiFontDataSize = 0;
    unsigned char *data = DecompressData(biosfontiiFontData, BIOSFONTII_STYLE_FONT_ATLAS_COMP_SIZE, &biosfontiiFontDataSize);
    Image imFont = { data, 256, 256, 1, 2 };

    Font font = { 0 };
    font.baseSize = 16;
    font.glyphCount = 95;

    // Load texture from image
    font.texture = LoadTextureFromImage(imFont);
    UnloadImage(imFont);  // Uncompressed image data can be unloaded from memory

    // Copy char recs data from global fontRecs
    // NOTE: Required to avoid issues if trying to free font
    font.recs = (Rectangle *)malloc(font.glyphCount*sizeof(Rectangle));
    memcpy(font.recs, biosfontiiFontRecs, font.glyphCount*sizeof(Rectangle));

    // Copy font char info data from global fontChars
    // NOTE: Required to avoid issues if trying to free font
    font.glyphs = (GlyphInfo *)malloc(font.glyphCount*sizeof(GlyphInfo));
    memcpy(font.glyphs, biosfontiiFontGlyphs, font.glyphCount*sizeof(GlyphInfo));

    GuiSetFont(font);

    // TODO: Setup a white rectangle on the font to be used on shapes drawing,
    // it makes possible to draw shapes and text (full UI) in a single draw call
    // NOTE: rGuiStyler provides a visual tool to define this rectangle on loaded font
    //Rectangle fontWhiteRec = { 0, 0, 0, 0 };
    //SetShapesTexture(font.texture, fontWhiteRec);

    //-----------------------------------------------------------------

    // TODO: Custom user style setup: Set specific properties here (if required)
    // i.e. Controls specific BORDER_WIDTH, TEXT_PADDING, TEXT_ALIGNMENT
}
